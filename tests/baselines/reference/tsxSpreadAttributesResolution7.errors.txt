tests/cases/conformance/jsx/file.tsx(18,11): error TS2600: JSX element attributes type '({ editable: false; } & { children?: ReactNode; }) | ({ editable: true; onEdit: (newText: string) => void; } & { children?: ReactNode; })' may not be a union type.
tests/cases/conformance/jsx/file.tsx(25,11): error TS2600: JSX element attributes type '({ editable: false; } & { children?: ReactNode; }) | ({ editable: true; onEdit: (newText: string) => void; } & { children?: ReactNode; })' may not be a union type.


==== tests/cases/conformance/jsx/file.tsx (2 errors) ====
    
    import React = require('react');
    
    type TextProps = { editable: false }
                   | { editable: true, onEdit: (newText: string) => void };
    
    class TextComponent extends React.Component<TextProps, {}> {
        render() {
            return <span>Some Text..</span>;
        }
    }
    
    // OK
    const textPropsFalse: TextProps = {
        editable: false
    };
    
    let y1 = <TextComponent {...textPropsFalse} />
              ~~~~~~~~~~~~~
!!! error TS2600: JSX element attributes type '({ editable: false; } & { children?: ReactNode; }) | ({ editable: true; onEdit: (newText: string) => void; } & { children?: ReactNode; })' may not be a union type.
    
    const textPropsTrue: TextProps = {
        editable: true,
        onEdit: () => {}
    };
    
    let y2 = <TextComponent {...textPropsTrue} />
              ~~~~~~~~~~~~~
!!! error TS2600: JSX element attributes type '({ editable: false; } & { children?: ReactNode; }) | ({ editable: true; onEdit: (newText: string) => void; } & { children?: ReactNode; })' may not be a union type.