=== tests/cases/conformance/jsx/file.tsx ===

import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

interface OptionProp {
>OptionProp : Symbol(OptionProp, Decl(file.tsx, 1, 32))

    x?: 2
>x : Symbol(OptionProp.x, Decl(file.tsx, 3, 22))

    y?: boolean
>y : Symbol(OptionProp.y, Decl(file.tsx, 4, 9))
}

class Opt extends React.Component<OptionProp, {}> {
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))
>React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>React : Symbol(React, Decl(file.tsx, 0, 0))
>Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>OptionProp : Symbol(OptionProp, Decl(file.tsx, 1, 32))

    render() {
>render : Symbol(Opt.render, Decl(file.tsx, 8, 51))

        return <div>Hello</div>;
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2397, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2397, 45))
    }
}

const obj: OptionProp = {};
>obj : Symbol(obj, Decl(file.tsx, 14, 5))
>OptionProp : Symbol(OptionProp, Decl(file.tsx, 1, 32))

const obj1: OptionProp = {
>obj1 : Symbol(obj1, Decl(file.tsx, 15, 5))
>OptionProp : Symbol(OptionProp, Decl(file.tsx, 1, 32))

    x: 2
>x : Symbol(x, Decl(file.tsx, 15, 26))
}

// OK
let p = <Opt />;
>p : Symbol(p, Decl(file.tsx, 20, 3))
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))

let y = <Opt {...obj} />;
>y : Symbol(y, Decl(file.tsx, 21, 3))
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))
>obj : Symbol(obj, Decl(file.tsx, 14, 5))

let y1 = <Opt {...obj1} />;
>y1 : Symbol(y1, Decl(file.tsx, 22, 3))
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))
>obj1 : Symbol(obj1, Decl(file.tsx, 15, 5))

let y2 = <Opt {...obj1} y/>;
>y2 : Symbol(y2, Decl(file.tsx, 23, 3))
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))
>obj1 : Symbol(obj1, Decl(file.tsx, 15, 5))
>y : Symbol(y, Decl(file.tsx, 23, 23))

let y3 = <Opt x={2} />;
>y3 : Symbol(y3, Decl(file.tsx, 24, 3))
>Opt : Symbol(Opt, Decl(file.tsx, 6, 1))
>x : Symbol(x, Decl(file.tsx, 24, 13))

