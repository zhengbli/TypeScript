=== tests/cases/conformance/jsx/file.tsx ===

import React = require('react');
>React : Symbol(React, Decl(file.tsx, 0, 0))

const obj = {};
>obj : Symbol(obj, Decl(file.tsx, 3, 5))

const obj1 = {
>obj1 : Symbol(obj1, Decl(file.tsx, 4, 5))

    x: 2
>x : Symbol(x, Decl(file.tsx, 4, 14))
}
const obj3 = {
>obj3 : Symbol(obj3, Decl(file.tsx, 7, 5))

    y: true,
>y : Symbol(y, Decl(file.tsx, 7, 14))

    overwrite: "hi"
>overwrite : Symbol(overwrite, Decl(file.tsx, 8, 12))
}

interface Prop {
>Prop : Symbol(Prop, Decl(file.tsx, 10, 1))

    x: number
>x : Symbol(Prop.x, Decl(file.tsx, 12, 16))

    y: boolean
>y : Symbol(Prop.y, Decl(file.tsx, 13, 13))

    overwrite: string
>overwrite : Symbol(Prop.overwrite, Decl(file.tsx, 14, 14))
}

class OverWriteAttr extends React.Component<Prop, {}> {
>OverWriteAttr : Symbol(OverWriteAttr, Decl(file.tsx, 16, 1))
>React.Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>React : Symbol(React, Decl(file.tsx, 0, 0))
>Component : Symbol(React.Component, Decl(react.d.ts, 158, 55))
>Prop : Symbol(Prop, Decl(file.tsx, 10, 1))

    render() {
>render : Symbol(OverWriteAttr.render, Decl(file.tsx, 18, 55))

        return <div>Hello</div>;
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2397, 45))
>div : Symbol(JSX.IntrinsicElements.div, Decl(react.d.ts, 2397, 45))
    }
}

// OK
let x = <OverWriteAttr {...obj} y overwrite="hi" {...obj1} />
>x : Symbol(x, Decl(file.tsx, 25, 3))
>OverWriteAttr : Symbol(OverWriteAttr, Decl(file.tsx, 16, 1))
>obj : Symbol(obj, Decl(file.tsx, 3, 5))
>y : Symbol(y, Decl(file.tsx, 25, 31))
>overwrite : Symbol(overwrite, Decl(file.tsx, 25, 33))
>obj1 : Symbol(obj1, Decl(file.tsx, 4, 5))

let x1 = <OverWriteAttr {...obj1} {...obj3}  />
>x1 : Symbol(x1, Decl(file.tsx, 26, 3))
>OverWriteAttr : Symbol(OverWriteAttr, Decl(file.tsx, 16, 1))
>obj1 : Symbol(obj1, Decl(file.tsx, 4, 5))
>obj3 : Symbol(obj3, Decl(file.tsx, 7, 5))

